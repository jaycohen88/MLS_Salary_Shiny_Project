data(faithful)
head(faithful)
data(faithful)
length_fun = function(x){
if (3.2 > faithful$eruptions){
x = 'short'
} else {
x = 'long'
}
}
mutate(faithful, length = length_fun(faithful))
data(faithful)
length_fun = function(x){
if (3.2 > faithful$eruptions){
x = 'short'
} else {
x = 'long'
}
}
mutate(faithful, length = length_fun(faithful$eruptions))
data(faithful)
length_fun = function(x){
if (3.2 > faithful$eruptions){
x = 'short'
} else {
x = 'long'
}
}
faithful = faithful %>% mutate(length = sapply(length, length_fun))
data(faithful)
length_fun = function(x){
if (3.2 > faithful$eruptions){
x = 'short'
} else {
x = 'long'
}
}
faithful = faithful %>% mutate(length = apply(length, length_fun))
data(faithful)
length_fun = function(x){
if (3.2 > faithful$eruptions){
x = 'short'
} else {
x = 'long'
}
}
mutate(faithful, length = sapply(length, length_fun))
?sapply
head(faithful)
data(faithful)
length_fun = function(x){
if (3.2 > faithful$eruptions){
x = 'short'
} else {
x = 'long'
}
}
mutate(faithful, length = sapply(length, length_fun))
data(faithful)
length_fun = function(x){
if (3.2 > faithful$eruptions){
x = 'short'
} else {
x = 'long'
}
}
faithful = mutate(faithful, length = sapply(length, length_fun))
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
head(data)
data(faithful)
faithful = mutate(faithful, length = ifelse(eruptions<3.2, 'short', 'long'))
head(faithful)
data$win = gsub('W', 1, data$win)
data$win = gsub('L', 0, data$win)
head(data)
?group_by
by_season = group_by(data, season)
?summarise
?geom_boxplot
ggplot(data=faithful, aes(x=length, y=waiting) + geom_boxplot)
data(faithful)
faithful = mutate(faithful, length = ifelse(eruptions<3.2, 'short', 'long'))
ggplot(data=faithful, aes(x=length, y=waiting)) + geom_boxplot()
data(faithful)
faithful = mutate(faithful, length = ifelse(eruptions<3.2, 'short', 'long'))
ggplot(data=faithful, aes(x=length, y=waiting)) + geom_boxplot()
ggplot(data=faithful, aes(x=waiting)) + geom_density(aes(color=length))
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
data$win = gsub('W', 1, data$win)
data$win = gsub('L', 0, data$win)
by_season = group_by(data, season)
by_season %>% summarise(ratio=sum(win==1)/n())
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
data$win = gsub('W', 1, data$win)
data$win = gsub('L', 0, data$win)
by_season = group_by(data, season)
by_season %>% summarise(ratio=sum(win==1)/n())
%>% ggplot(aes(x=season, y=ratio)) + geom_bar()
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
data$win = gsub('W', 1, data$win)
data$win = gsub('L', 0, data$win)
by_season = group_by(data, season)
by_season %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_bar()
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
data$win = gsub('W', 1, data$win)
data$win = gsub('L', 0, data$win)
by_season = group_by(data, season)
by_season %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_bar(state = 'identity')
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
data$win = gsub('W', 1, data$win)
data$win = gsub('L', 0, data$win)
by_season = group_by(data, season)
by_season %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_bar(stat = 'identity')
by_visting = group_by(data, season, visiting) %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_col(aes(fill=visiting), position='dodge')
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
data$win = gsub('W', 1, data$win)
data$win = gsub('L', 0, data$win)
by_season = group_by(data, season)
by_season %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_bar(stat = 'identity')
by_visting = group_by(data, season, visiting) %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_col(aes(fill=visiting), position='dodge')
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
data$win = gsub('W', 1, data$win)
data$win = gsub('L', 0, data$win)
by_season = group_by(data, season)
by_season %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_bar(stat = 'identity')
data %>% group_by(data, season, visiting) %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_col(aes(fill=visiting), position='dodge')
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
data$win = gsub('W', 1, data$win)
data$win = gsub('L', 0, data$win)
by_season = group_by(data, season)
by_season %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_bar(stat = 'identity')
data %>% group_by(season, visiting) %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_col(aes(fill=visiting), position='dodge')
ggplot(data, aes(x=points)) + geom_histogram() + facet_wrap(~season)
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
data$win = gsub('W', 1, data$win)
data$win = gsub('L', 0, data$win)
by_season = group_by(data, season)
by_season %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_bar(stat = 'identity')
data %>% group_by(season, visiting) %>% summarise(ratio=sum(win==1)/n()) %>% ggplot(aes(x=season, y=ratio)) + geom_col(aes(fill=visiting), position='dodge')
ggplot(data, aes(x=points)) + geom_histogram() + facet_wrap(~season)
yob2014 = read.csv('names/yob2014.txt)
yob2014 = read.csv('names/yob2014.txt')
yob2014 = read.csv('./names/yob2014.txt')
head(yob2014)
yob2014 = read.csv('./names/yob2014.txt', header = FALSE, col.names = c('name','sex','number'))
yob2014$initial = substring(yob2014$name, first=1, last=1)
starts_with_g = filter(yob2014$initial == 'G')
starts_with_g = filter (yob2014, yob2014$initial == 'G')
length(unique(starts_with_g$name))
starts_with_k = filter (yob2014, yob2014$initial == 'K')
sum(starts_with_k$number)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
salaries_2019 = read_csv('salaries_2019.csv')
head(salaries_2019)
colnames(salaries_2019) = tolower(colnames(salaries_2019))
colnames(salaries_2019) = gsub(' ', '_', colnames(salaries_2019))
head(salaries_2019)
?rename
salaries_2019 %>% rename(position = playing_position, current_annualized_base_salary = cy_salary_(annual), annualized_average_guaranteed_comp = cy_guaranteed_comp_(annual))
salaries_2019 %>% rename('position' = 'playing_position', 'current_annualized_base_salary' = 'cy_salary_(annual)', 'annualized_average_guaranteed_comp' = 'cy_guaranteed_comp_(annual)')
?mutate
salaries_2019 %>% mutate(season = 2019)
salaries_2019 %>% rename('position' = 'playing_position', 'current_annualized_base_salary' = 'cy_salary_(annual)', 'annualized_average_guaranteed_comp' = 'cy_guaranteed_comp_(annual)') %>% mutate(season = 2019)
salaries_2019$current_annualized_base_salary = gsub(" )", "", salaries_2019$current_annualized_base_salary, fixed=TRUE)
salaries_2019$current_annualized_base_salary = gsub(" )", "", salaries_2019$current_annualized_base_salary, fixed=TRUE)
salaries_2019$current_annualized_base_salary = gsub(" )", "", salaries_2019$current_annualized_base_salary)
salaries_2019$current_annualized_base_salary = substr(salaries_2019$current_annualized_base_salary, 2, nchar(salaries_2019$annualized_average_guaranteed_comp)-2)
salaries_2019 = salaries_2019 %>% rename('position' = 'playing_position', 'current_annualized_base_salary' = 'cy_salary_(annual)', 'annualized_average_guaranteed_comp' = 'cy_guaranteed_comp_(annual)') %>% mutate(season = 2019)
salaries_2019$current_annualized_base_salary = substr(salaries_2019$current_annualized_base_salary, 2, nchar(salaries_2019$annualized_average_guaranteed_comp)-2)
salaries_2019$annualized_average_guaranteed_comp = substr(salaries_2019$annualized_average_guaranteed_comp, 2, nchar(salaries_2019$annualized_average_guaranteed_comp)-2)
head(salaries_2019)
?as.numeric
salaries_2019$current_annualized_base_salary = as.integer(salaries_2019$current_annualized_base_salary)
salaries_2019$annualized_average_guaranteed_comp = as.integer(salaries_2019$annualized_average_guaranteed_comp)
salaries_2019
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
salaries_2019 = read_csv('salaries_2019.csv')
head(salaries_2019)
colnames(salaries_2019) = tolower(colnames(salaries_2019))
colnames(salaries_2019) = gsub(' ', '_', colnames(salaries_2019))
head(salaries_2019)
salaries_2019 = salaries_2019 %>% rename('position' = 'playing_position', 'current_annualized_base_salary' = 'cy_salary_(annual)', 'annualized_average_guaranteed_comp' = 'cy_guaranteed_comp_(annual)') %>% mutate(season = 2019)
salaries_2019$current_annualized_base_salary = substr(salaries_2019$current_annualized_base_salary, 2, nchar(salaries_2019$annualized_average_guaranteed_comp)-2)
salaries_2019$annualized_average_guaranteed_comp = substr(salaries_2019$annualized_average_guaranteed_comp, 2, nchar(salaries_2019$annualized_average_guaranteed_comp)-2)
head(salaries_2019)
salaries_2019$current_annualized_base_salary = as.numeric(salaries_2019$current_annualized_base_salary)
salaries_2019$annualized_average_guaranteed_comp = as.numeric(salaries_2019$annualized_average_guaranteed_comp)
head(salaries_2019)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
salaries_2019 = read_csv('salaries_2019.csv')
head(salaries_2019)
colnames(salaries_2019) = tolower(colnames(salaries_2019))
colnames(salaries_2019) = gsub(' ', '_', colnames(salaries_2019))
head(salaries_2019)
salaries_2019 = salaries_2019 %>% rename('position' = 'playing_position', 'current_annualized_base_salary' = 'cy_salary_(annual)', 'annualized_average_guaranteed_comp' = 'cy_guaranteed_comp_(annual)') %>% mutate(season = 2019)
salaries_2019$current_annualized_base_salary = substr(salaries_2019$current_annualized_base_salary, 2, nchar(salaries_2019$annualized_average_guaranteed_comp)-2)
salaries_2019$annualized_average_guaranteed_comp = substr(salaries_2019$annualized_average_guaranteed_comp, 2, nchar(salaries_2019$annualized_average_guaranteed_comp)-2)
head(salaries_2019)
salaries_2019$current_annualized_base_salary = gsub(',','',salaries_2019$current_annualized_base_salary)
salaries_2019$annualized_average_guaranteed_comp = gsub(',','',salaries_2019$annualized_average_guaranteed_comp)
salaries_2019$current_annualized_base_salary = as.numeric(salaries_2019$current_annualized_base_salary)
salaries_2019$annualized_average_guaranteed_comp = as.numeric(salaries_2019$annualized_average_guaranteed_comp)
head(salaries_2019)
salaries_2019
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
salaries_2019 = read_csv('salaries_2019.csv')
head(salaries_2019)
colnames(salaries_2019) = tolower(colnames(salaries_2019))
colnames(salaries_2019) = gsub(' ', '_', colnames(salaries_2019))
head(salaries_2019)
salaries_2019 = salaries_2019 %>% rename('position' = 'playing_position', 'current_annualized_base_salary' = 'cy_salary_(annual)', 'annualized_average_guaranteed_comp' = 'cy_guaranteed_comp_(annual)') %>% mutate(season = 2019)
salaries_2019$current_annualized_base_salary = gsub(',','',salaries_2019$current_annualized_base_salary, fixed=TRUE)
salaries_2019$current_annualized_base_salary = gsub(')','',salaries_2019$current_annualized_base_salary, fixed=TRUE)
salaries_2019$current_annualized_base_salary = gsub('$','',salaries_2019$current_annualized_base_salary, fixed=TRUE)
salaries_2019$current_annualized_base_salary =
gsub(' ','',salaries_2019$current_annualized_base_salary, fixed=TRUE)
salaries_2019$annualized_average_guaranteed_comp = gsub(',','',salaries_2019$annualized_average_guaranteed_comp, fixed=TRUE)
salaries_2019$annualized_average_guaranteed_comp = gsub(')','',salaries_2019$annualized_average_guaranteed_comp, fixed=TRUE)
salaries_2019$annualized_average_guaranteed_comp = gsub('$','',salaries_2019$annualized_average_guaranteed_comp, fixed=TRUE)
salaries_2019$annualized_average_guaranteed_comp =
gsub(' ','',salaries_2019$annualized_average_guaranteed_comp, fixed=TRUE)
salaries_2019$current_annualized_base_salary = as.numeric(salaries_2019$current_annualized_base_salary)
salaries_2019$annualized_average_guaranteed_comp = as.numeric(salaries_2019$annualized_average_guaranteed_comp)
salaries_2019
?round
salaries_2019$current_annualized_base_salary = round(salaries_2019$current_annualized_base_salary, digits = 0)
salaries_2019$annualized_average_guaranteed_comp = round(salaries_2019$annualized_average_guaranteed_comp, digits = 0)
salaries_2019
write.csv(salaries_2019, file='salaries_2019_cleaned.csv')
salaries_through_2018 = read_csv('mls_salaries.csv')
salaries_through_2018 = salaries_through_2018 %>% rename('current_annualized_base_salary' = 'base_salary', 'annualized_average_guaranteed_comp' = 'total_compensation')
salaries_through_2018$club =
gsub('ATL', 'Atlanta United', salaries_through_2018$club)
salaries_through_2018$club =
gsub('CHI', 'Chicago Fire', salaries_through_2018$club)
salaries_through_2018$club =
gsub('CHV', 'Chivas USA', salaries_through_2018$club)
salaries_through_2018$club =
gsub('CLB', 'Columbus Crew', salaries_through_2018$club)
salaries_through_2018$club =
gsub('CLB', 'Columbus Crew', salaries_through_2018$club)
salaries_through_2018$club =
gsub('COL', 'Colorado Rapids', salaries_through_2018$club)
salaries_through_2018$club =
gsub('DAL', 'FC Dallas', salaries_through_2018$club)
salaries_through_2018$club =
gsub('DC', 'DC United', salaries_through_2018$club)
salaries_through_2018$club =
gsub('HOU', 'Houston Dynamo', salaries_through_2018$club)
salaries_through_2018$club =
gsub('KC', 'Sporting Kansas City', salaries_through_2018$club)
salaries_through_2018$club =
gsub('LA', 'LA Galaxy', salaries_through_2018$club)
salaries_through_2018$club =
gsub('MNUFC', 'Minnesota United', salaries_through_2018$club)
salaries_through_2018$club =
gsub('MTL', 'Montreal Impact', salaries_through_2018$club)
salaries_through_2018$club =
gsub('NE', 'New England Revolution', salaries_through_2018$club)
salaries_through_2018$club =
gsub('NE', 'New England Revolution', salaries_through_2018$club)
salaries_through_2018$club =
gsub('NY', 'New York Red Bulls', salaries_through_2018$club)
salaries_through_2018$club =
gsub('NYRB', 'New York Red Bulls', salaries_through_2018$club)
salaries_through_2018$club =
gsub('NYCFC', 'New York City FC', salaries_through_2018$club)
salaries_through_2018$club =
gsub('ORL', 'Orlando City SC', salaries_through_2018$club)
salaries_through_2018$club =
gsub('PHI', 'Philadelphia Union', salaries_through_2018$club)
salaries_through_2018$club =
gsub('POR', 'Portland Timbers', salaries_through_2018$club)
salaries_through_2018$club =
gsub('RSL', 'Real Salt Lake', salaries_through_2018$club)
salaries_through_2018$club =
gsub('SEA', 'Seattle Sounders FC', salaries_through_2018$club)
salaries_through_2018$club =
gsub('SJ', 'San Jose Earthquakes', salaries_through_2018$club)
salaries_through_2018$club =
gsub('TFC', 'Toronto FC', salaries_through_2018$club)
salaries_through_2018$club =
gsub('TOR', 'Toronto FC', salaries_through_2018$club)
salaries_through_2018$club =
gsub('VAN', 'Vancouver Whitecaps', salaries_through_2018$club)
head(salaries_through_2018)
salaries_through_2018 = read_csv('mls_salaries.csv')
salaries_through_2018 = salaries_through_2018 %>% rename('current_annualized_base_salary' = 'base_salary', 'annualized_average_guaranteed_comp' = 'total_compensation')
head(salaries_through_2018)
mutate(salaries_through_2018, club_name =
ifelse(club=='ATL', 'Atlanta United',
ifelse(club=='CHI', 'Chicago Fire',
ifelse(club=='CHV', 'Chivas USA',
ifelse(club=='CLB', 'Columbus Crew',
ifelse(club=='COL', 'Colorado Rapids',
ifelse(club=='DAL', 'FC Dallas',
ifelse(club=='DC', 'DC United',
ifelse(club=='HOU', 'Houston Dynamo',
ifelse(club=='KC', 'Sporting Kansas City',
ifelse(club=='LA', 'LA Galaxy',
ifelse(club=='MNUFC', 'Minnesota United',
ifelse(club=='MTL', 'Montreal Impact',
ifelse(club=='NE', 'New England Revolution',
ifelse(club=='NY', 'New York Red Bulls',
ifelse(club=='NYRB', 'New York Red Bulls',
ifelse(club=='NYCFC', 'New York City FC',
ifelse(club=='ORL', 'Orlando City SC',
ifelse(club=='PHI', 'Philadelphia Union',
ifelse(club=='POR', 'Portland Timbers',
ifelse(club=='RSL', 'Real Salt Lake',
ifelse(club=='SEA', 'Seattle Sounders FC',
ifelse(club=='SJ', 'San Jose Earthquakes',
ifelse(club=='TFC', 'Toronto FC',
ifelse(club=='TOR', 'Toronto FC',
ifelse(club=='VAN', 'Vancouver Whitecaps', club)
)))))))))))))))))))))))))
salaries_through_2018 = salaries_through_2018 %>% select(.,-club)
head(salaries_through_2018)
salaries_through_2018 = read_csv('mls_salaries.csv')
salaries_through_2018 = salaries_through_2018 %>% rename('current_annualized_base_salary' = 'base_salary', 'annualized_average_guaranteed_comp' = 'total_compensation')
head(salaries_through_2018)
salaries_through_2018 = mutate(salaries_through_2018, club_name =
ifelse(club=='ATL', 'Atlanta United',
ifelse(club=='CHI', 'Chicago Fire',
ifelse(club=='CHV', 'Chivas USA',
ifelse(club=='CLB', 'Columbus Crew',
ifelse(club=='COL', 'Colorado Rapids',
ifelse(club=='DAL', 'FC Dallas',
ifelse(club=='DC', 'DC United',
ifelse(club=='HOU', 'Houston Dynamo',
ifelse(club=='KC', 'Sporting Kansas City',
ifelse(club=='LA', 'LA Galaxy',
ifelse(club=='MNUFC', 'Minnesota United',
ifelse(club=='MTL', 'Montreal Impact',
ifelse(club=='NE', 'New England Revolution',
ifelse(club=='NY', 'New York Red Bulls',
ifelse(club=='NYRB', 'New York Red Bulls',
ifelse(club=='NYCFC', 'New York City FC',
ifelse(club=='ORL', 'Orlando City SC',
ifelse(club=='PHI', 'Philadelphia Union',
ifelse(club=='POR', 'Portland Timbers',
ifelse(club=='RSL', 'Real Salt Lake',
ifelse(club=='SEA', 'Seattle Sounders FC',
ifelse(club=='SJ', 'San Jose Earthquakes',
ifelse(club=='TFC', 'Toronto FC',
ifelse(club=='TOR', 'Toronto FC',
ifelse(club=='VAN', 'Vancouver Whitecaps', club)
)))))))))))))))))))))))))
salaries_through_2018 = salaries_through_2018 %>% select(.,-club)
head(salaries_through_2018)
salaries_through_2018 = salaries_through_2018 %>% rename('club_abbr' = 'club_grouped')
head(salaries_through_2018)
write.csv(salaries_through_2018, file='salaries_through_2018_cleaned.csv')
salaries_2019 = salaries_2019 %>% rename('club_name' = 'club')
salaries_2019 = salaries_2019 %>% rename('club_name' = 'club')
head(salaries_2019)
salaries_2019 = mutate(salaries_2019, club_abbr =
ifelse(club_name=='Atlanta United','ATL',
ifelse(club_name=='Chicago Fire','CHI',
ifelse(club_name=='Chivas USA','CHV',
ifelse(club_name=='Columbus Crew','CLB',
ifelse(club_name=='Colorado Rapids','COL',
ifelse(club_name=='FC Dallas','FCD',
ifelse(club_name=='DC United','DC',
ifelse(club_name=='Houston Dynamo','HOU',
ifelse(club_name=='Sporting Kansas City','KC',
ifelse(club_name=='LA Galaxy','LAG',
ifelse(club_name=='Minnesota United','MNU',
ifelse(club_name=='Montreal Impact','MTL',
ifelse(club_name=='New England Revolution','NE',
ifelse(club_name=='New York Red Bulls','RBNY',
ifelse(club_name=='New York City FC','NYC',
ifelse(club_name=='Orlando City SC','ORL',
ifelse(club_name=='Philadelphia Union','PHI',
ifelse(club_name=='Portland Timbers','POR',
ifelse(club_name=='Real Salt Lake','RSL',
ifelse(club_name=='Seattle Sounders FC','SEA',
ifelse(club_name=='San Jose Earthquakes','SJ',
ifelse(club_name=='Toronto FC','TFC',
ifelse(club_name=='Vancouver Whitecaps', 'VAN', club_name)
)))))))))))))))))))))))
head(salaries_2019)
write.csv(salaries_2019, file='salaries_2019_cleaned.csv')
?rbind
all_salaries = rbind(salaries_2019, salaries_through_2018)
all_salaries
salaries_2019$club_abbr = gsub('FC Cincinnati','CIN', salaries_2019$club_abbr)
salaries_2019
write.csv(salaries_2019, file='salaries_2019_cleaned.csv')
all_salaries = rbind(salaries_2019, salaries_through_2018)
all_salaries = rbind(salaries_2019, salaries_through_2018)
all_salaries
?write.csv
write.csv(all_salaries, file='Final_Salary_Data.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
csv_filenames = list.files(path='./data', pattern='........csv')
csv_filenames = paste('./data/', csv_filenames, sep='')
all_dfs = lapply(csv_filenames, read.csv, stringsAsFactors = FALSE)
path = "https://nycdsastudent.s3.us-east-2.amazonaws.com/MidtermRDA/all_dfs.RDS"
download.file(path,"./bail_out/all_dfs.RDS", method="curl")
all_dfs <- readRDS( "./bail_out/all_dfs.RDS" )
all_dfs = lapply(all_dfs, select, START.DATE, END.DATE, OFFICE, PURPOSE, AMOUNT)
library(lubridate)
clean_date_str = function(datestr) {
str_squish(datestr)
ifelse(!is.na(datestr), dmy(datestr), datestr)
}
fmt_df_dates = function(dfr) {
dfr = mutate_at(dfr, clean_date_str, vars(START.DATE, END.DATE))
}
clean_amount_str = function(amtstr) {
gsub("[^0-9.-]", "", amtstr)
}
fmt_df_amount = function(dfr) {
dfr = mutate_at(dfr, clean_amount_str, vars(AMOUNT))
}
all_dfs = lapply(all_dfs, fmt_df_dates)
fmt_df_dates = function(dfr) {
dfr = mutate_at(dfr, vars('START.DATE', 'END.DATE'), clean_date_str,)
}
clean_amount_str = function(amtstr) {
gsub("[^0-9.-]", "", amtstr)
}
fmt_df_amount = function(dfr) {
dfr = mutate_at(dfr, vars('AMOUNT'), clean_amount_str)
}
all_dfs = lapply(all_dfs, fmt_df_dates)
all_dfs = lapply(all_dfs, fmt_df_amount)
df_tot = bind_rows(all_dfs)
head(df_tot)
df_tot
csv_filenames = list.files(path='./data', pattern='........csv')
csv_filenames = paste('./data/', csv_filenames, sep='')
path = "https://nycdsastudent.s3.us-east-2.amazonaws.com/MidtermRDA/all_dfs.RDS"
download.file(path,"./bail_out/all_dfs.RDS", method="curl")
all_dfs <- readRDS( "./bail_out/all_dfs.RDS" )
all_dfs = lapply(all_dfs, select, START.DATE, END.DATE, OFFICE, PURPOSE, AMOUNT)
library(lubridate)
clean_date_str = function(datestr) {
str_squish(datestr)
ifelse(!is.na(datestr), parse_date_time(datestr, fmt = c('%Y-%m-%d','%m-%d-%Y','%m-%d-%y','%Y\%m\%d','%m\%d\%Y','%m\%d\%y'), datestr))
library(lubridate)
clean_date_str = function(datestr) {
str_squish(datestr)
ifelse(!is.na(datestr), parse_date_time(datestr, fmt = c('%Y-%m-%d','%m-%d-%Y','%m-%d-%y','%Y/%m/%d','%m/%d/%Y','%m/%d/%y'), datestr))
}
fmt_df_dates = function(dfr) {
dfr = mutate_at(dfr, vars('START.DATE', 'END.DATE'), clean_date_str,)
}
clean_amount_str = function(amtstr) {
gsub("[^0-9.-]", "", amtstr)
}
fmt_df_amount = function(dfr) {
dfr = mutate_at(dfr, vars('AMOUNT'), clean_amount_str)
}
all_dfs = lapply(all_dfs, fmt_df_dates)
path = "https://nycdsastudent.s3.us-east-2.amazonaws.com/MidtermRDA/df_tot.RDS"
download.file(path,"./bail_out/df_tot.RDS", method="curl")
df_tot <- readRDS( "./bail_out/df_tot.RDS" )
?difftime
?std
unclass(as.Date("1971-01-01"))
height = c(25,18,40,45,35)
height(5)
height(length(height))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
all_salaries = read_csv('Final_Salary_Data.csv')
all_salaries$position = gsub('-','',all_salaries$position, fixed=TRUE)
all_salaries$position = gsub('/','',all_salaries$position, fixed=TRUE)
write.csv(all_salaries, file='Final_Salary_Data.csv')
?write.csv
head(all_salaries)
?select
all_salaries = select(all_salaries, -X1)
head(all_salaries)
write.csv(all_salaries, file='Final_Salary_Data.csv')
shiny::runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
shiny::runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
runApp('~/Documents/NYCDSA/Shiny_Project/MLS_Salary_Shiny_Project/MLS_Salary_Shiny_App')
